version: '3.8'

services:
  # PostgreSQL for Orleans grain persistence
  postgres:
    image: postgres:16
    container_name: heuss-postgres
    environment:
      POSTGRES_USER: heuss
      POSTGRES_PASSWORD: heuss_dev_password
      POSTGRES_DB: heuss_simulation
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - heuss-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U heuss"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Orleans clustering (optional, can use Azure Table Storage emulator)
  redis:
    image: redis:7-alpine
    container_name: heuss-redis
    ports:
      - "6379:6379"
    networks:
      - heuss-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Azurite (Azure Storage emulator) for Orleans streams and persistence
  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    container_name: heuss-azurite
    ports:
      - "10000:10000"  # Blob service
      - "10001:10001"  # Queue service
      - "10002:10002"  # Table service
    networks:
      - heuss-network
    command: "azurite --blobHost 0.0.0.0 --queueHost 0.0.0.0 --tableHost 0.0.0.0 --loose"

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: heuss-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - heuss-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: heuss-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - heuss-network
    depends_on:
      - prometheus

networks:
  heuss-network:
    driver: bridge

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:
